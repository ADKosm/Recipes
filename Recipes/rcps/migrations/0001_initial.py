# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-04 16:39
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlternativeConsists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField()),
                ('comment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_name', models.CharField(max_length=200)),
                ('equipment_alternative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ecategory_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_stars', models.IntegerField()),
                ('grade_favorite', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='IngredientAlternative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alternative_quality', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='IngredientCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icategory_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_name', models.CharField(max_length=200)),
                ('recipe_rating', models.FloatField()),
                ('recipe_link', models.URLField(max_length=500)),
                ('commentators', models.ManyToManyField(related_name='commentators', through='rcps.Comment', to=settings.AUTH_USER_MODEL)),
                ('graders', models.ManyToManyField(related_name='graders', through='rcps.Grade', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=200)),
                ('tag_recipes', models.ManyToManyField(to='rcps.Recipe')),
            ],
        ),
        migrations.AddField(
            model_name='ingredientalternative',
            name='alternative_recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.Recipe'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='alternative',
            field=models.ManyToManyField(related_name='consists', through='rcps.AlternativeConsists', to='rcps.IngredientAlternative'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='ingredient_alternative',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.IngredientAlternative'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='ingredient_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.IngredientCategory'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='recipe',
            field=models.ManyToManyField(through='rcps.Consist', to='rcps.Recipe'),
        ),
        migrations.AddField(
            model_name='grade',
            name='grade_recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.Recipe'),
        ),
        migrations.AddField(
            model_name='grade',
            name='grader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='equipment',
            name='equipment_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.EquipmentCategory'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='equipment_recipes',
            field=models.ManyToManyField(to='rcps.Recipe'),
        ),
        migrations.AddField(
            model_name='consist',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.Ingredient'),
        ),
        migrations.AddField(
            model_name='consist',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.Recipe'),
        ),
        migrations.AddField(
            model_name='comment',
            name='comment_recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.Recipe'),
        ),
        migrations.AddField(
            model_name='alternativeconsists',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.Ingredient'),
        ),
        migrations.AddField(
            model_name='alternativeconsists',
            name='ingredient_alternative',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rcps.IngredientAlternative'),
        ),
    ]
